plugins {
	id 'maven-publish'
	id 'fabric-loom' version "0.4-SNAPSHOT"
	id 'com.matthewprenger.cursegradle' version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = 'legacy-fabric'
		url = 'https://maven.legacyfabric.net'
	}
}

minecraft {
	intermediaryUrl = {
		return "https://maven.legacyfabric.net/net/fabricmc/intermediary/" + it + "/intermediary-" + it + "-v2.jar";
	}
}

dependencies {
	implementation "com.google.guava:guava:23.5-jre"
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation ("net.fabricmc:fabric-loader-1.8.9:${project.loader_version}") {
		exclude module: "guava"
	}
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"

	if (System.getProperty("os.name").toLowerCase().contains("mac")) {
		implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
		implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
		implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
	}
}

if (System.getProperty("os.name").toLowerCase().contains("mac")) {
	configurations.all {
		resolutionStrategy {
			dependencySubstitution {
				substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
				substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
			}
			force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
		}
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		if (project.hasProperty('legacy_fabric_maven_publish_token')) {
			maven {
				url 'https://maven.legacyfabric.net/'
				credentials {
					username 'BobTheBuildSlave'
					password project.getProperty('legacy_fabric_maven_publish_token')
				}
				authentication {
					basic(BasicAuthentication)
				}
			}
		}
	}
}

curseforge {
	if (project.hasProperty('curse_api_key')) {
		apiKey = project.getProperty('curse_api_key')
	} else if (ENV.CURSE_API_KEY) {
		apiKey = ENV.CURSE_API_KEY
	}
	project {
		id = '465337'
		changelog = 'A changelog can be found at https://github.com/BoogieMonster1O1/ModMenu/commits'
		releaseType = 'beta'
		addGameVersion '1.8.9'
		addGameVersion 'Fabric'
		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[1.8.9] ModMenu ${version}"
		}
		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}
	options {
		forgeGradleIntegration = false
	}
}
